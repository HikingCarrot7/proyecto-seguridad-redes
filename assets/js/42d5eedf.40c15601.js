"use strict";(self.webpackChunkweb_security=self.webpackChunkweb_security||[]).push([[557],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,k=d["".concat(c,".").concat(m)]||d[m]||p[m]||r;return n?o.createElement(k,i(i({ref:t},u),{},{components:n})):o.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3345:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var o=n(7462),a=n(3366),r=(n(7294),n(3905)),i=["components"],s={id:"introduction-sockets",title:"\xbfQu\xe9 son los sockets?",sidebar_position:1},c=void 0,l={unversionedId:"sockets/introduction-sockets",id:"sockets/introduction-sockets",isDocsHomePage:!1,title:"\xbfQu\xe9 son los sockets?",description:"Definici\xf3n",source:"@site/docs/sockets/introduction-sockets.md",sourceDirName:"sockets",slug:"/sockets/introduction-sockets",permalink:"/proyecto-seguridad-redes/docs/sockets/introduction-sockets",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"introduction-sockets",title:"\xbfQu\xe9 son los sockets?",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Protocolos en sockets",permalink:"/proyecto-seguridad-redes/docs/sockets/protocols-sockets"}},u=[{value:"Definici\xf3n",id:"definici\xf3n",children:[],level:2},{value:"Componentes de un socket",id:"componentes-de-un-socket",children:[],level:2},{value:"Tipos de socket",id:"tipos-de-socket",children:[],level:2},{value:"Protocolos",id:"protocolos",children:[],level:2},{value:"Referencias",id:"referencias",children:[],level:2}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"definici\xf3n"},"Definici\xf3n"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},'Un socket es un "endpoint" o "punto final" de una comunicaci\xf3n bidireccional entre dos programas que est\xe1n corriendo en la red. Cada socket est\xe1 vinculado a un n\xfamero de puerto para que la capa TCP pueda identificar la aplicaci\xf3n a la que est\xe1n destinados los datos. Para que dos aplicaciones se puedan comunicar, es necesaria una direcci\xf3n formada por la combinaci\xf3n de una direcci\xf3n IP y un n\xfamero de puerto.')),(0,r.kt)("p",{align:"center"},(0,r.kt)("img",{src:"/img/sockets/sockets_example.png",alt:"Comunicaci\xf3n entre hosts y servidor"})),(0,r.kt)("p",null,"Los sockets permiten implementar arquitecturas ",(0,r.kt)("strong",{parentName:"p"},"cliente-servidor")," o ",(0,r.kt)("strong",{parentName:"p"},"peer-to-peer"),". En este tipo de arquitecturas la comunicaci\xf3n es iniciada por una aplicaci\xf3n llamada ",(0,r.kt)("strong",{parentName:"p"},"cliente"),", aquella que env\xeda peticiones y espera una respuesta. En contraparte, existe una segunda aplicaci\xf3n que siempre se encuentra a la escucha, esperando a que un cliente realice una petici\xf3n para darle una respuesta; esta aplicaci\xf3n es conocida como ",(0,r.kt)("strong",{parentName:"p"},"servidor"),"."),(0,r.kt)("h2",{id:"componentes-de-un-socket"},"Componentes de un socket"),(0,r.kt)("p",null,"Un socket consiste en tres elementos:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Direcci\xf3n IP"),": Se trata de una direcci\xf3n \xfanica que identifica a un dispositivo en internet o en una red local."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Puerto"),": Es el punto de entrada (para un servidor) o salida (para un cliente) por la que se da la comunicaci\xf3n entre dos aplicaciones. Cada puerto est\xe1 asociado con una aplicaci\xf3n espec\xedfica. Todos los puertos se indentifican por un ",(0,r.kt)("strong",{parentName:"li"},"n\xfamero de puerto"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Protocolo"),": El conjunto de reglas que existen entre dos o m\xe1s aplicaciones para poder comunicarse entre s\xed.")),(0,r.kt)("h2",{id:"tipos-de-socket"},"Tipos de socket"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Socket de flujo de datos (Stream socket)"),": Este tipo de socket est\xe1 asociado al protocolo ",(0,r.kt)("strong",{parentName:"p"},"TCP"),", por lo brinda seguridad en la transmisi\xf3n, seguridad en la recepci\xf3n, en la integridad y en la secuencia de los paquetes de datos.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Socket de datagramas (Datagram socket)"),": Tipo de socket asociado al protocolo ",(0,r.kt)("strong",{parentName:"p"},"UDP"),", e indica que los datos viajan en datagramas. En contraste con el con el tipo de socket anterior, en este tipo de comunicaciones no se requieren servicios de recuperaci\xf3n y verificaci\xf3n de errores."))),(0,r.kt)("h2",{id:"protocolos"},"Protocolos"),(0,r.kt)("p",null,"Para que se pueda existir la comunicaci\xf3n entre los dos extremos de una conexi\xf3n, es necesario un protocolo de comunicaciones que permita el intercambio de informaci\xf3n. Existen dos protocolos b\xe1sicos que son mayormente utilizados para lograr tal fin: ",(0,r.kt)("strong",{parentName:"p"},"TCP")," y ",(0,r.kt)("strong",{parentName:"p"},"UDP"),". Cabe resaltar que ambos protocolos operan en la capa de transporte y tienen el objetivo de comunicar a dos aplicaciones ejecut\xe1ndose en computadoras diferentes a trav\xe9s de una red."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"TCP (Protocolo de control de transmisi\xf3n)"),": Es un protocolo orientado a la conexi\xf3n, es decir, garantiza que exista una conexi\xf3n adecuada antes de que pueda comenzar una comunicaci\xf3n entre los dispositivos. Adem\xe1s, este protocolo garantiza que la transmisi\xf3n de todos los paquetes de datos sin errores ni omisiones; asimismo, garantiza que cada paquete llegar\xe1 a su destino en el mismo orden en que se ha transmitido.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"UDP (Protocolo de datagramas de usuario)"),": Es un protocolo sin conexi\xf3n que no se preocupa por una conexi\xf3n adecuada, lo que lo hace r\xe1pido pero menos confiable. La mayor\xeda de las comunicaciones en tiempo real y VoIP se realizan a trav\xe9s de UDP."))),(0,r.kt)("h2",{id:"referencias"},"Referencias"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.geeksforgeeks.org/socket-in-computer-network/"},"GeeksforGeeks. (2020, 10 mayo). Socket in Computer Network.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/tutorial/networking/sockets/definition.html"},"What Is a Socket? (The JavaTM Tutorials > Custom Networking > All About Sockets). (2014). Oracle.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.javatpoint.com/socket-programming"},"Java Socket Programming (Java Networking Tutorial) - javatpoint. (2015). Www.Javatpoint.Com.")))}d.isMDXComponent=!0}}]);