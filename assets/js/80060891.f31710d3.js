"use strict";(self.webpackChunkweb_security=self.webpackChunkweb_security||[]).push([[229],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,v=u["".concat(l,".").concat(m)]||u[m]||d[m]||i;return t?a.createElement(v,o(o({ref:n},p),{},{components:t})):a.createElement(v,o({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},1950:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return g},default:function(){return S},frontMatter:function(){return E},metadata:function(){return h},toc:function(){return y}});var a=t(7462),r=t(3366),i=t(7294),o=t(3905),s="browserWindow_CU2T",l="browserWindowHeader_9KMa",c="buttons_HaVU",p="browserWindowAddressBar_ep3W",d="dot_AgBE",u="browserWindowMenuIcon_mrOC",m="bar_CAZr",v="browserWindowBody_jHfO";var k=function(e){var n=e.children,t=e.minHeight,a=e.url;return i.createElement("div",{className:s,style:{minHeight:t}},i.createElement("div",{className:l},i.createElement("div",{className:c},i.createElement("span",{className:d,style:{background:"#f25f58"}}),i.createElement("span",{className:d,style:{background:"#fbbe3c"}}),i.createElement("span",{className:d,style:{background:"#58cb42"}})),i.createElement("div",{className:p},a),i.createElement("div",{className:u},i.createElement("div",null,i.createElement("span",{className:m}),i.createElement("span",{className:m}),i.createElement("span",{className:m})))),i.createElement("div",{className:v},n))},f=["components"],E={id:"exercise-sockets",title:"Sockets con Kotlin",sidebar_position:3},g=void 0,h={unversionedId:"sockets/exercise-sockets",id:"sockets/exercise-sockets",isDocsHomePage:!1,title:"Sockets con Kotlin",description:"\xbfQu\xe9 vamos a hacer?",source:"@site/docs/sockets/exercise-sockets.mdx",sourceDirName:"sockets",slug:"/sockets/exercise-sockets",permalink:"/proyecto-seguridad-redes/docs/sockets/exercise-sockets",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"exercise-sockets",title:"Sockets con Kotlin",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Protocolos en sockets",permalink:"/proyecto-seguridad-redes/docs/sockets/protocols-sockets"},next:{title:"Importancia de la seguridad en la comunicaci\xf3n",permalink:"/proyecto-seguridad-redes/docs/communication-security/intro"}},y=[{value:"\xbfQu\xe9 vamos a hacer?",id:"qu\xe9-vamos-a-hacer",children:[],level:2},{value:"La aplicaci\xf3n cliente",id:"la-aplicaci\xf3n-cliente",children:[],level:2},{value:"La aplicaci\xf3n servidor",id:"la-aplicaci\xf3n-servidor",children:[],level:2},{value:"Resultados",id:"resultados",children:[{value:"Cliente",id:"cliente",children:[],level:3},{value:"Servidor",id:"servidor",children:[],level:3}],level:2},{value:"Anexos",id:"anexos",children:[],level:2}],b={toc:y};function S(e){var n=e.components,i=(0,r.Z)(e,f);return(0,o.kt)("wrapper",(0,a.Z)({},b,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"qu\xe9-vamos-a-hacer"},"\xbfQu\xe9 vamos a hacer?"),(0,o.kt)("p",null,"Se har\xe1 una peque\xf1a implementaci\xf3n del uso del sockets utilizando el lenguaje de programaci\xf3n ",(0,o.kt)("a",{parentName:"p",href:"https://kotlinlang.org/"},"Kotlin"),". Se construir\xe1n dos aplicaciones: un servidor que estar\xe1 a la escucha de todas las peticiones que pueda recibir; y un cliente que har\xe1 peticiones a dicho servidor."),(0,o.kt)("p",null,"El funcionamiento de las aplicaciones ser\xe1 muy sencillo. El cliente mandar\xe1 una cadena de texto al servidor; a continuaci\xf3n, el servidor realiz\xe1 cierto procesamiento para convertir esa cadena de texto a may\xfascula para, finalmente, ser devuelta al cliente que le mand\xf3 dicha cadena de texto."),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Comunicaci\xf3n entre hosts y servidor",src:t(5263).Z})),(0,o.kt)("h2",{id:"la-aplicaci\xf3n-cliente"},"La aplicaci\xf3n cliente"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="Client.kt"',title:'"Client.kt"'},'import java.io.PrintWriter\nimport java.net.Socket\nimport java.util.*\n\nprivate const val HOST = "localhost"\n\nfun main(args: Array<String>) {\n    val clientSocket = Socket(HOST, PORT)\n\n    clientSocket.use {\n        // Entrada para permitir escribir mensajes por consola.\n        val entrada = Scanner(System.`in`)\n\n        // Mensaje respuesta del servidor.\n        val respuesta = Scanner(clientSocket.getInputStream())\n\n        // Salida para el env\xedo de mensajes hacia el servidor.\n        val salida = PrintWriter(clientSocket.getOutputStream(), true)\n\n        println("Enviar mensaje al servidor: ")\n\n        while (entrada.hasNextLine()) {\n            salida.println(entrada.nextLine())\n\n            println("Respuesta del servidor: ${respuesta.nextLine()}")\n        }\n\n    }\n}\n')),(0,o.kt)("h2",{id:"la-aplicaci\xf3n-servidor"},"La aplicaci\xf3n servidor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin",metastring:'title="UppercaseServer.kt"',title:'"UppercaseServer.kt"'},'import java.io.PrintWriter\nimport java.net.ServerSocket\nimport java.util.*\n\nconst val PORT = 9000\n\nfun main(args: Array<String>) {\n    val serverSocket = ServerSocket(PORT) // Escuchamos en el puerto 9000.\n\n    serverSocket.use {\n\n        println("Escuchando en el puerto: $PORT")\n\n        while (true) {\n            val client = serverSocket.accept()\n\n            client.use {\n                val entrada = Scanner(client.getInputStream())\n                val salida = PrintWriter(client.getOutputStream(), true)\n\n                println("Informaci\xf3n del cliente: $it")\n\n                while (entrada.hasNextLine()) {\n                    // Leemos el mensaje del cliente.\n                    val mensajeCliente = entrada.nextLine()\n\n                    // Convertimos a may\xfasculas el mensaje.\n                    val respuesta = mensajeCliente.uppercase()\n\n                    println("Enviando la respuesta: $respuesta")\n\n                    // Enviamos la respuesta al cliente.\n                    salida.println(respuesta)\n                }\n\n            }\n        }\n\n    }\n}\n')),(0,o.kt)("h2",{id:"resultados"},"Resultados"),(0,o.kt)("h3",{id:"cliente"},"Cliente"),(0,o.kt)(k,{mdxType:"BrowserWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Enviar mensaje al servidor:\nHola\nRespuesta del servidor: HOLA\nEste es un mensaje para el servidor\nRespuesta para el servidor: ESTE ES UN MENSAJE PARA EL SERVIDOR\n"))),(0,o.kt)("p",null,"En primer lugar, el cliente env\xeda la palabra ",(0,o.kt)("inlineCode",{parentName:"p"},"Hola")," al servidor; el servidor responde con la palabra ",(0,o.kt)("inlineCode",{parentName:"p"},"HOLA"),", que es justo el resultado que se esperaba. Este procedimiento vuelve a repetirse, pero esta vez con la frase ",(0,o.kt)("inlineCode",{parentName:"p"},"Este es un mensaje para el servidor"),", a lo que el servidor responde con el texto ",(0,o.kt)("inlineCode",{parentName:"p"},"ESTE ES UN MENSAJE PARA EL SERVIDOR"),"."),(0,o.kt)("h3",{id:"servidor"},"Servidor"),(0,o.kt)(k,{mdxType:"BrowserWindow"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Escuchando en el puerto: 9000\nInformaci\xf3n del cliente: Socket[addr=/127.0.0.1,port=53916,localport=9000]\nEnviando la respuesta: HOLA\nEnviando la respuesta: ESTA ES UNA FRASE PARA EL SERVIDOR\n"))),(0,o.kt)("p",null,"Por el lado del servidor, las cosas son un poco diferentes. Primeramente, se acepta la conexi\xf3n del cliente. Por la direcci\xf3n de host ",(0,o.kt)("inlineCode",{parentName:"p"},"127.0.0.1")," (localhost) se trata de una aplicaci\xf3n que se est\xe1 ejecutando en la misma computadora en la que se ejecuta el servidor; adem\xe1s, se observa que el n\xfamero de puerto que el sistema operativo decidi\xf3 asignarle al cliente es el ",(0,o.kt)("inlineCode",{parentName:"p"},"53916"),"."),(0,o.kt)("p",null,"Una vez que el servidor acepta la conexi\xf3n, recibe el mensaje ",(0,o.kt)("inlineCode",{parentName:"p"},"Hola"),", lo convierte a may\xfascula y se lo env\xeda al cliente como ",(0,o.kt)("inlineCode",{parentName:"p"},"HOLA"),". Este operaci\xf3n se vuelve a repetir para el mensaje ",(0,o.kt)("inlineCode",{parentName:"p"},"Este es un mensaje para el servidor"),", por lo que el servidor la renv\xeda como ",(0,o.kt)("inlineCode",{parentName:"p"},"ESTE ES UN MENSAJE PARA EL SERVIDOR"),"."),(0,o.kt)("h2",{id:"anexos"},"Anexos"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/HikingCarrot7/proyecto-seguridad-redes/tree/main/src/sockets"},"C\xf3digo fuente de ambas aplicaciones")))}S.isMDXComponent=!0},5263:function(e,n,t){n.Z=t.p+"assets/images/sockets_exercise-3f86be2df7f6706256e381dfc82b3f7d.png"}}]);